

install ardupilot

git git clone https://github.com/ArduPilot/ardupilot.git
cd ardupilot
git checkout Copter-4.2
git submodule update --init --recursive

subl ~/.bashrc
add lines:
export PATH=$PATH:$HOME/ardupilot/Tools/autotest
export PATH=/usr/lib/ccache:$PATH

. ~/.bashrc

build vehicle simulator (sitl)	:
cd ~/ardupilot/ArduCopter
sim_vehicle.py -w


gazebo and ardupilot plugin:
sudo sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
wget http://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -
sudo apt update
sudo apt install gazebo9 libgazebo9-dev

######  i dont think i need this ############
cd ~
git clone https://github.com/khancyr/ardupilot_gazebo.git
cd ardupilot_gazebo
git checkout dev

mkdir build
cd build
cmake ..
make -j4
sudo make install

echo 'source /usr/share/gazebo/setup.sh' >> ~/.bashrc
echo 'export GAZEBO_MODEL_PATH=~/ardupilot_gazebo/models' >> ~/.bashrc
. ~/.bashrc


run:
gazebo --verbose ~/ardupilot_gazebo/worlds/iris_arducopter_runway.world
cd ~/ardupilot/ArduCopter/
sim_vehicle.py -v ArduCopter -f gazebo-iris --console
###############################	

install ros:
http://wiki.ros.org/melodic/Installation/Ubuntu

mkdir -p ~/catkin_ws/src
cd ~/catkin_ws
catkin init

cd ~/catkin_ws
wstool init ~/catkin_ws/src

rosinstall_generator --upstream mavros | tee /tmp/mavros.rosinstall
rosinstall_generator mavlink | tee -a /tmp/mavros.rosinstall
wstool merge -t src /tmp/mavros.rosinstall
wstool update -t src
rosdep install --from-paths src --ignore-src --rosdistro `echo $ROS_DISTRO` -y

catkin build


echo "source ~/catkin_ws/devel/setup.bash" >> ~/.bashrc
source ~/.bashrc

sudo ~/catkin_ws/src/mavros/mavros/scripts/install_geographiclib_datasets.sh

cd ~/catkin_ws/src
git clone https://github.com/Intelligent-Quads/iq_sim.git
echo "GAZEBO_MODEL_PATH=${GAZEBO_MODEL_PATH}:$HOME/catkin_ws/src/iq_sim/models" >> ~/.bashrc

cd ~/catkin_ws
catkin build


on jetson:
sudo apt install nvidia-cuda-toolkit


use yolo:
cd ~/catkin_ws/src
git clone --recursive https://github.com/leggedrobotics/darknet_ros.git
catkin build -DCMAKE_BUILD_TYPE=Release 
# -DCMAKE_C_COMPILER=/usr/bin/gcc-6

edit darknet_ros/darknet_ros/config
/camera/rgb/image_raw -> /camera/image_raw
edit darknet_ros.launch
<arg name="network_param_file"         default="$(find darknet_ros)/config/yolov2-tiny.yaml"/>




run:
cd ~/ardupilot/ArduCopter/ && sim_vehicle.py -v ArduCopter -f gazebo-iris --console
roslaunch <package;iq_sim> <file.launch>
roslaunch darknet_ros darknet_ros.launch


rostopic list
rostopic echo /gazebo/model_states
rosmsg show nav_msgs/Odometry


 MAVROS is a middle man which translates the MAVlink messages into ROS messages, which are easy to use and common between different robot systems. To start mavros run

 roslaunch iq_sim apm.launch (set right address here so that you can get mavlink)
 roslaunch mavros apm.launch

 maybe interesting topic:
 setpoint_attitude/attitude 

mavlink:
SET_ATTITUDE_TARGET 